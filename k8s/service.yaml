apiVersion: v1
kind: Service
metadata:
  name: python-code-helper-service
  namespace: python-code-helper
  labels:
    app.kubernetes.io/name: python-code-helper
    app.kubernetes.io/component: api
    app.kubernetes.io/part-of: python-code-helper-system
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8000
    targetPort: http
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: metrics
    protocol: TCP
  selector:
    app.kubernetes.io/name: python-code-helper
    app.kubernetes.io/component: api

---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: python-code-helper
  labels:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: python-code-helper-system
spec:
  type: ClusterIP
  ports:
  - name: postgres
    port: 5432
    targetPort: postgres
    protocol: TCP
  selector:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/component: database

---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: python-code-helper
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: cache
    app.kubernetes.io/part-of: python-code-helper-system
spec:
  type: ClusterIP
  ports:
  - name: redis
    port: 6379
    targetPort: redis
    protocol: TCP
  selector:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: cache

---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
  namespace: python-code-helper
  labels:
    app.kubernetes.io/name: nginx
    app.kubernetes.io/component: proxy
    app.kubernetes.io/part-of: python-code-helper-system
spec:
  type: LoadBalancer
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  - name: https
    port: 443
    targetPort: https
    protocol: TCP
  selector:
    app.kubernetes.io/name: nginx
    app.kubernetes.io/component: proxy
  sessionAffinity: None

---
# Headless service for StatefulSet (if needed for database clustering)
apiVersion: v1
kind: Service
metadata:
  name: postgres-headless
  namespace: python-code-helper
  labels:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: python-code-helper-system
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - name: postgres
    port: 5432
    targetPort: postgres
    protocol: TCP
  selector:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/component: database 