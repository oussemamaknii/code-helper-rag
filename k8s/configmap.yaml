apiVersion: v1
kind: ConfigMap
metadata:
  name: python-code-helper-config
  namespace: python-code-helper
  labels:
    app.kubernetes.io/name: python-code-helper
    app.kubernetes.io/component: config
    app.kubernetes.io/part-of: python-code-helper-system
data:
  # Application settings
  APP_ENV: "production"
  LOG_LEVEL: "INFO"
  API_HOST: "0.0.0.0"
  API_PORT: "8000"
  
  # Database settings
  DATABASE_HOST: "postgres-service"
  DATABASE_PORT: "5432"
  DATABASE_NAME: "python_code_helper"
  REDIS_HOST: "redis-service"
  REDIS_PORT: "6379"
  REDIS_DB: "0"
  
  # Vector database settings
  PINECONE_ENVIRONMENT: "us-east-1-aws"
  PINECONE_INDEX_NAME: "python-code-helper"
  
  # Model settings
  DEFAULT_CHAT_MODEL: "gpt-4"
  DEFAULT_EMBEDDING_MODEL: "text-embedding-3-large"
  MAX_CONTEXT_LENGTH: "8000"
  DEFAULT_TEMPERATURE: "0.7"
  
  # Processing settings
  MAX_CHUNK_SIZE: "1000"
  CHUNK_OVERLAP: "200"
  MAX_CONCURRENT_REQUESTS: "10"
  REQUEST_TIMEOUT: "300"
  
  # Search settings
  DEFAULT_TOP_K: "10"
  SIMILARITY_THRESHOLD: "0.7"
  ENABLE_HYBRID_SEARCH: "true"
  
  # Monitoring settings
  ENABLE_METRICS: "true"
  METRICS_PORT: "9090"
  HEALTH_CHECK_INTERVAL: "30"
  
  # Rate limiting
  RATE_LIMIT_PER_MINUTE: "60"
  BURST_LIMIT: "10"
  
  # Security settings
  CORS_ORIGINS: "*"
  ENABLE_API_KEY_AUTH: "true"
  JWT_ALGORITHM: "HS256"
  
  # Feature flags
  ENABLE_STREAMING: "true"
  ENABLE_CACHING: "true"
  ENABLE_LOGGING: "true"
  ENABLE_TRACING: "false"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: python-code-helper
  labels:
    app.kubernetes.io/name: nginx
    app.kubernetes.io/component: config
    app.kubernetes.io/part-of: python-code-helper-system
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;
    
    events {
        worker_connections 2048;
        use epoll;
        multi_accept on;
    }
    
    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;
        
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';
        
        access_log /var/log/nginx/access.log main;
        
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        server_tokens off;
        
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_types text/plain application/json application/javascript text/css;
        
        upstream api {
            server python-code-helper-service:8000 max_fails=3 fail_timeout=30s;
        }
        
        server {
            listen 80;
            server_name _;
            
            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }
            
            location /api/ {
                proxy_pass http://api;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                
                proxy_connect_timeout 5s;
                proxy_send_timeout 60s;
                proxy_read_timeout 60s;
            }
            
            location /docs {
                proxy_pass http://api;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
            
            location / {
                return 200 '{"message": "Python Code Helper RAG System", "docs": "/docs"}';
                add_header Content-Type application/json;
            }
        }
    } 